/********************************************************************************************
* PIC16F877A 
* Interrupts
* Pressing button K13 or K17 generates an interrupt when the button is released 
*   
*********************************************************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <xc.h>
#include "BoardConfig.h" 

#pragma config FOSC  = XT       // Oscillator Selection bits (XT oscillator)
#pragma config WDTE  = OFF      // Watchdog Timer Enable bit (WDT enabled)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config BOREN = OFF      // Brown-out Reset Enable bit (BOR disabled)
#pragma config LVP   = OFF      // Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit (RB3 is digital I/O, HV on MCLR must be used for programming)
#pragma config CPD   = OFF      // Data EEPROM Memory Code Protection bit (Data EEPROM code protection off)
#pragma config WRT   = OFF      // Flash Program Memory Write Enable bits (Write protection off; all program memory may be written to by EECON control)
#pragma config CP    = OFF      // Flash Program Memory Code Protection bit (Code protection off)

// Unless specified elsewhere, 4MHz system frequency is assumed
#ifndef _XTAL_FREQ
 #define _XTAL_FREQ 4000000
#endif

void __interrupt() int_01(void);

/********************************************************************************************
* void main()
*********************************************************************************************/
void main()
{
    uchar key;
    Board_init();      
    TRISB = 0x01;     
    RC5   = 1; 
    INTE  = 1;
    GIE   = 1;  
    PEIE  = 1; 
    while(1); 
}

/********************************************************************************************
* void __interrupt() int_01(void);
*********************************************************************************************/
void __interrupt() int_01(void)
{
    if(INTE && INTCON)  
    {
        INTF = 0; 
        RD0  = !RD0;  
    }
}  

